# Generated by Django 5.2.6 on 2025-09-27 04:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotRepository',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('code', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bot_repository',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AvailableGame',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('game_type', models.CharField(choices=[('coins', 'Coins'), ('gems', 'Gems')], max_length=5)),
                ('total_hands', models.IntegerField()),
                ('remaining_hands', models.IntegerField()),
                ('posted_on', models.DateTimeField(auto_now_add=True)),
                ('initial_stack', models.IntegerField()),
                ('max_rebuys', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bot', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games', to='poker.botrepository')),
            ],
            options={
                'db_table': 'available_games',
                'ordering': ['-posted_on'],
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('play_mode', models.CharField(choices=[('human', 'Human vs Bot'), ('bot', 'Bot vs Bot')], default='human', max_length=5)),
                ('player_stack', models.IntegerField(default=0)),
                ('bot_stack', models.IntegerField(default=0)),
                ('current_street', models.CharField(default='preflop', max_length=20)),
                ('pot', models.IntegerField(default=0)),
                ('player_cards', models.JSONField(default=list)),
                ('board_cards', models.JSONField(default=list)),
                ('game_state', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_coins', models.IntegerField(default=0)),
                ('hands_to_play', models.IntegerField(default=0)),
                ('hands_played', models.IntegerField(default=0)),
                ('player_initial_stack', models.IntegerField(default=0)),
                ('bot_initial_stack', models.IntegerField(default=0)),
                ('player_max_rebuys', models.IntegerField(default=0)),
                ('simulation_running', models.BooleanField(default=False)),
                ('available_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poker.availablegame')),
                ('opponent_bot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opponent_sessions', to='poker.botrepository')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('player_bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_sessions', to='poker.botrepository')),
            ],
            options={
                'db_table': 'game_sessions',
            },
        ),
        migrations.CreateModel(
            name='UserCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('code', models.TextField()),
                ('language', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='botrepository',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_bot_name_per_user'),
        ),
    ]
